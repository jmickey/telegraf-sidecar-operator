apiVersion: v1
kind: Namespace
metadata:
  labels:
    pod-security.kubernetes.io/enforce: baseline
    app.kubernetes.io/name: telegraf-sidecar-operator
    app.kubernetes.io/part-of: telegraf-sidecar-operator
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/version: latest
  name: telegraf-sidecar-operator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: telegraf-sidecar-operator
  namespace: telegraf-sidecar-operator
  labels:
    app: telegraf-sidecar-operator
    app.kubernetes.io/name: telegraf-sidecar-operator
    app.kubernetes.io/component: operator
    app.kubernetes.io/part-of: telegraf-sidecar-operator
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      app: telegraf-sidecar-operator
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app: telegraf-sidecar-operator
        name: telegraf-sidecar-operator
    spec:
      # TODO(user): Uncomment the following code to configure the nodeAffinity expression
      # according to the platforms which are supported by your solution.
      # It is considered best practice to support multiple architectures. You can
      # build your manager image using the makefile target docker-buildx.
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #         - matchExpressions:
      #           - key: kubernetes.io/arch
      #             operator: In
      #             values:
      #               - amd64
      #               - arm64
      #               - ppc64le
      #               - s390x
      #           - key: kubernetes.io/os
      #             operator: In
      #             values:
      #               - linux
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - command:
            - /manager
          args:
            - --leader-elect
            - --zap-log-level=info
            - --zap-encoder=console
            - --zap-time-encoding=rfc3339
            - --zap-stacktrace-level=error
          image: docker.io/jmickey/telegraf-sidecar-operator:latest
          name: telegraf-sidecar-operator
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - "ALL"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          # TODO(user): Configure the resources accordingly based on the project requirements.
          # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          resources:
            limits:
              cpu: 1000m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          volumeMounts:
            - name: telegraf-classes
              mountPath: /etc/config/classes
      serviceAccountName: telegraf-sidecar-operator
      terminationGracePeriodSeconds: 30
      volumes:
        - name: telegraf-classes
          secret:
            secretName: telegraf-classes
